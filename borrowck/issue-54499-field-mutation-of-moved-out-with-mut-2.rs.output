error: (Syntax.PartiallyMovedExprPath (
          (("unknown_file", (10, 19), (10, 24)),
           (Syntax.Struct ("Tpair", [], [],
              (Some (("<inferred>", (-1, -1), (-1, -1)),
                     (Syntax.Tup
                        [(("unknown_file", (5, 13), (5, 15)),
                          (Syntax.Struct ("Sn", [], [],
                             (Some (("<inferred>", (-1, -1), (-1, -1)),
                                    (Syntax.Tup
                                       [(("unknown_file", (3, 10), (3, 13)),
                                         (Syntax.BaseTy Syntax.U32))])))
                             )));
                          (("unknown_file", (5, 17), (5, 20)),
                           (Syntax.BaseTy Syntax.U32))
                          ])))
              ))),
          [(Syntax.Index 0)]))
invalid global environment:
 [(Syntax.TupStructDef
     (false, "Sn", [], [],
      [(("unknown_file", (3, 10), (3, 13)), (Syntax.BaseTy Syntax.U32))]));
   (Syntax.TupStructDef
      (false, "Tpair", [], [],
       [(("unknown_file", (5, 13), (5, 15)),
         (Syntax.Struct ("Sn", [], [], None)));
         (("unknown_file", (5, 17), (5, 20)), (Syntax.BaseTy Syntax.U32))]));
   (Syntax.RecStructDef
      (false, "Spair", [], [],
       [("x",
         (("unknown_file", (6, 18), (6, 20)),
          (Syntax.Struct ("Sn", [], [], None))));
         ("y",
          (("unknown_file", (6, 25), (6, 28)), (Syntax.BaseTy Syntax.U32)))
         ]));
   (Syntax.FnDef
      ("main", [], [], [],
       (("unknown_file", (8, 0), (8, 2)), (Syntax.BaseTy Syntax.Unit)), 
       [],
       (("unknown_file", (10, 8), (10, 11)),
        (Syntax.Let ("u",
           (("unknown_file", (10, 19), (10, 24)),
            (Syntax.Struct ("Tpair", [], [], None))),
           (("unknown_file", (10, 27), (10, 32)),
            (Syntax.TupStruct ("Tpair", [], [],
               [(("unknown_file", (10, 33), (10, 35)),
                 (Syntax.TupStruct ("Sn", [], [],
                    [(("unknown_file", (10, 36), (10, 37)),
                      (Syntax.Prim (Syntax.Num 0)))]
                    )));
                 (("unknown_file", (10, 40), (10, 41)),
                  (Syntax.Prim (Syntax.Num 0)))
                 ]
               ))),
           (("", (2, 0), (2, 0)),
            (Syntax.Seq (
               (("unknown_file", (11, 8), (11, 12)),
                (Syntax.App (
                   (("unknown_file", (11, 8), (11, 12)), (Syntax.Fn "drop")),
                   [],
                   [(("unknown_file", (11, 15), (11, 20)),
                     (Syntax.Struct ("Tpair", [], [], None)))],
                   [(("unknown_file", (11, 22), (11, 23)),
                     (Syntax.Move
                        (("unknown_file", (11, 22), (11, 23)), ("u", []))))
                     ]
                   ))),
               (("", (1, 0), (1, 0)),
                (Syntax.Seq (
                   (("unknown_file", (12, 8), (12, 9)),
                    (Syntax.Assign (
                       (("unknown_file", (12, 8), (12, 9)),
                        ("u", [(Syntax.Index 0)])),
                       (("unknown_file", (12, 14), (12, 16)),
                        (Syntax.TupStruct ("Sn", [], [],
                           [(("unknown_file", (12, 17), (12, 18)),
                             (Syntax.Prim (Syntax.Num 1)))]
                           )))
                       ))),
                   (("", (0, 0), (0, 0)),
                    (Syntax.Seq (
                       (("unknown_file", (14, 8), (14, 9)),
                        (Syntax.Assign (
                           (("unknown_file", (14, 8), (14, 9)),
                            ("u", [(Syntax.Index 1)])),
                           (("unknown_file", (14, 14), (14, 15)),
                            (Syntax.Prim (Syntax.Num 2)))
                           ))),
                       (("unknown_file", (14, 15), (14, 16)),
                        (Syntax.Prim Syntax.Unit))
                       )))
                   )))
               )))
           )))))
   ]
